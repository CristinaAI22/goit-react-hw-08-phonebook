{"version":3,"file":"static/js/620.6f2a48bd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/addContact/AddContact.module.css?6003","redux/contacts/selectors.js","components/addContact/AddContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactList/ContactList.module.css?7e3b","webpack://goit-react-hw-08-phonebook/./src/components/contact/Contact.module.css?ecf7","components/contact/Contact.jsx","components/noContacts/NoContacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactFilter/ContactFilter.module.css?0693","components/contactFilter/ContactFilter.jsx","components/contactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddContact_form__8Stmg\",\"error\":\"AddContact_error__XiGjs\",\"successMessage\":\"AddContact_successMessage__HFmMz\",\"label\":\"AddContact_label__a8ptD\",\"input\":\"AddContact_input__4AhAd\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterSlice = state => state.filters.textFilter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilterSlice, selectContacts],\n  (filterSlice, contacts) => {\n    const textFilter = filterSlice;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(textFilter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './AddContact.module.css';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const AddContact = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [numberError, setnumberError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [contactExistsMessage, setContactExistsMessage] = useState('');\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setNameError('');\n    setnumberError('');\n    setContactExistsMessage('');\n\n    const validateName = /^[a-zA-Z]+(([' -][a-zA-Z ])?[a-zA-Z]*)*$/.test(name);\n    const validatenumber =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/.test(\n        number\n      );\n\n    if (!validateName) {\n      setNameError('Please enter a valid name.');\n      return;\n    }\n\n    if (!validatenumber) {\n      setnumberError('Please enter a valid number number.');\n      return;\n    }\n    const isContactExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isContactExists) {\n      setContactExistsMessage('Contact already exists in your contact list!');\n      setTimeout(() => {\n        setContactExistsMessage('');\n      }, 2000);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    setSuccessMessage('Contact added successfully!');\n    setTimeout(() => {\n      setSuccessMessage('');\n    }, 2000);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleFormSubmit}>\n        <label className={css.label}>\n          Name:\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            required\n          />\n          {nameError && <p className={css.error}>{nameError}</p>}\n        </label>\n        <label className={css.label}>\n          Phone number:\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n            required\n          />\n          {numberError && <p className={css.error}>{numberError}</p>}\n        </label>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n      {successMessage && <p className={css.successMessage}>{successMessage}</p>}\n      {contactExistsMessage && (\n        <p className={css.error}>{contactExistsMessage}</p>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__S-drv\",\"subtitle\":\"ContactList_subtitle__X8jzy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__DgbdX\",\"deleteBtn\":\"Contact_deleteBtn__6DazF\"};","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const contactName = contact.name;\n  const contactNumber = contact.number;\n  const handleRemove = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  return (\n    <li className={css.item}>\n      <span>\n        {contactName} - {contactNumber}\n      </span>\n      <button className={css.deleteBtn} onClick={handleRemove}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","export const NoContacts = () => {\n  return <div role=\"alert\">No contacts found</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactFilter_input__nVe9l\"};","import css from './ContactFilter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeTextFilter } from 'redux/contacts/filterSlice';\nimport { selectFilterSlice } from 'redux/contacts/selectors';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterSlice);\n  const handleFilterChange = e => {\n    const name = e.target.value;\n    dispatch(changeTextFilter(name));\n  };\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n      placeholder=\"Search contacts...\"\n      className={css.input}\n    />\n  );\n};\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { Contact } from '../contact/Contact';\nimport { NoContacts } from 'components/noContacts/NoContacts';\nimport { ContactFilter } from '../contactFilter/ContactFilter';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  return (\n    <div>\n      <h2 className={css.subtitle}>Contacts</h2>\n      <ContactFilter />\n      {contacts.length === 0 && <NoContacts />}\n      <ul className={css.list}>\n        {contacts.length > 0 &&\n          contacts.map(c => <Contact key={c.id} contact={c} />)}\n      </ul>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AddContact } from '../components/addContact/AddContact';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport background from '../images/Daco_4859602.png';\nconst styles = {\n  container: {\n    width: '1200px',\n    margin: '0 auto',\n    padding: '20px',\n    display: 'flex',\n    gap: '10px',\n  },\n  image: {\n    backgroundImage: `url(${background})`,\n    backgroundSize: '550px',\n    backgroundRepeat: 'no-repeat',\n    flexBasis: '50%',\n  },\n  contacts: {\n    maxWidth: '600px',\n    margin: '0 auto',\n    padding: '20px',\n    flexBasis: '50%',\n  },\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={styles.container}>\n        <div style={styles.contacts}>\n          <AddContact />\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList />\n        </div>\n        <div style={styles.image}></div>\n      </div>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterSlice","filters","textFilter","selectFilteredContacts","createSelector","filterSlice","filter","contact","name","toLowerCase","includes","AddContact","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","nameError","setNameError","numberError","setnumberError","successMessage","setSuccessMessage","contactExistsMessage","setContactExistsMessage","className","css","onSubmit","e","preventDefault","validateName","test","validatenumber","some","setTimeout","addContact","type","value","onChange","target","required","Contact","contactName","contactNumber","onClick","deleteContact","id","NoContacts","role","ContactFilter","changeTextFilter","placeholder","ContactList","length","map","c","styles","container","width","margin","padding","display","gap","image","backgroundImage","background","backgroundSize","backgroundRepeat","flexBasis","maxWidth","Contacts","useEffect","fetchContacts","style"],"sourceRoot":""}